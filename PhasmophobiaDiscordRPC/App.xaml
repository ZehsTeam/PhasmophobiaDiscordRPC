<Application
    x:Class="PhasmophobiaDiscordRPC.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:internal="clr-namespace:MaterialDesignThemes.Wpf.Internal;assembly=MaterialDesignThemes.Wpf"
    xmlns:local="clr-namespace:PhasmophobiaDiscordRPC"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
    StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme
                    BaseTheme="Dark"
                    PrimaryColor="Blue"
                    SecondaryColor="Lime" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  Colors  -->
            <Color x:Key="Colors.Foreground">#F2F3F5</Color>
            <Color x:Key="Colors.Foreground2">#B5BAC1</Color>
            <Color x:Key="Colors.Background">#36393e</Color>
            <Color x:Key="Colors.Background2">#282b30</Color>
            <Color x:Key="Colors.Background3">#1e2124</Color>
            <Color x:Key="Colors.Background4">#424549</Color>

            <!--  Brushes  -->
            <SolidColorBrush x:Key="Foreground" Color="{StaticResource Colors.Foreground}" />
            <SolidColorBrush x:Key="Foreground2" Color="{StaticResource Colors.Foreground2}" />
            <SolidColorBrush x:Key="Background" Color="{StaticResource Colors.Background}" />
            <SolidColorBrush x:Key="Background2" Color="{StaticResource Colors.Background2}" />
            <SolidColorBrush x:Key="Background3" Color="{StaticResource Colors.Background3}" />
            <SolidColorBrush x:Key="Background4" Color="{StaticResource Colors.Background4}" />

            <!--  Border  -->
            <Style x:Key="BorderDefault" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{StaticResource Background2}" />
                <Setter Property="CornerRadius" Value="3" />
            </Style>
            <Style
                x:Key="BorderDark"
                BasedOn="{StaticResource BorderDefault}"
                TargetType="{x:Type Border}">
                <Setter Property="Background" Value="{StaticResource Background3}" />
            </Style>

            <!--  TextBlock  -->
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="TextTrimming" Value="None" />
                <Setter Property="Opacity" Value="1" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.38" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style
                x:Key="TextBlockLabel"
                BasedOn="{StaticResource {x:Type TextBlock}}"
                TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource Foreground2}" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="FontWeight" Value="Medium" />
            </Style>

            <!--  TextBox  -->
            <Style
                x:Key="TextBoxDefault"
                BasedOn="{StaticResource {x:Type TextBox}}"
                TargetType="{x:Type TextBox}">
                <Setter Property="Padding" Value="0" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="CaretBrush" Value="{StaticResource Foreground}" />
                <Setter Property="materialDesign:TextFieldAssist.CharacterCounterVisibility" Value="Hidden" />
                <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Hidden" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>

            <!--  ComboBox  -->
            <Style
                x:Key="ComboBoxDefault"
                BasedOn="{StaticResource {x:Type ComboBox}}"
                TargetType="{x:Type ComboBox}">
                <Setter Property="Padding" Value="8,5,10,5" />
                <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Hidden" />
                <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{StaticResource Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource Foreground}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                <Setter Property="FontFamily" Value="{DynamicResource MaterialDesignFont}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>

            <!--  ListView  -->
            <Style x:Key="ListViewPlayerItem" TargetType="{x:Type ListViewItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border
                                x:Name="Border"
                                Height="30"
                                Style="{DynamicResource BorderDefault}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <!--  Host Icon & Username  -->
                                    <Grid Grid.Column="0" VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconColumn" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>

                                        <!--  Host Icon  -->
                                        <Grid
                                            Grid.Column="0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">
                                            <materialDesign:PackIcon
                                                x:Name="Icon"
                                                Width="15"
                                                Height="15"
                                                Foreground="Gold"
                                                Kind="Crown" />
                                        </Grid>

                                        <!--  Username  -->
                                        <TextBox
                                            Grid.Column="1"
                                            IsReadOnly="True"
                                            Style="{DynamicResource TextBoxDefault}"
                                            Text="{Binding Username}" />
                                    </Grid>

                                    <!--  Steam ID  -->
                                    <Grid
                                        Grid.Column="1"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center">
                                        <TextBox
                                            x:Name="SteamID"
                                            IsReadOnly="True"
                                            Style="{DynamicResource TextBoxDefault}"
                                            Text="{Binding SteamId}" />
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Style" Value="{StaticResource BorderDark}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding IsHost}" Value="True">
                                    <Setter TargetName="IconColumn" Property="Width" Value="30" />
                                    <Setter TargetName="Icon" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsHost}" Value="False">
                                    <Setter TargetName="IconColumn" Property="Width" Value="8" />
                                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSteamIdEmpty}" Value="True">
                                    <Setter TargetName="SteamID" Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  ScrollViewer  -->
            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Rectangle
                                    x:Name="Corner"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <ScrollContentPresenter
                                    x:Name="PART_ScrollContentPresenter"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="{TemplateBinding Padding}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <ScrollBar
                                    x:Name="PART_VerticalScrollBar"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="5,0,0,0"
                                    AutomationProperties.AutomationId="VerticalScrollBar"
                                    Cursor="Arrow"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    Minimum="0"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <ScrollBar
                                    x:Name="PART_HorizontalScrollBar"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Margin="0,5,0,0"
                                    AutomationProperties.AutomationId="HorizontalScrollBar"
                                    Cursor="Arrow"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    Minimum="0"
                                    Orientation="Horizontal"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  ScrollBar Colors  -->
            <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="{StaticResource Colors.Background2}" />
            <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="{StaticResource Colors.Background3}" />
            <CornerRadius x:Key="ScrollBar.Static.CornerRadius">5</CornerRadius>

            <!--  ScrollBar  -->
            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border
                                x:Name="border"
                                Background="{StaticResource ScrollBar.Static.Background}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border
                                x:Name="rectangle"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{StaticResource ScrollBar.Static.Thumb}"
                                CornerRadius="{DynamicResource ScrollBar.Static.CornerRadius}"
                                SnapsToDevicePixels="True" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border
                                x:Name="rectangle"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{StaticResource ScrollBar.Static.Thumb}"
                                CornerRadius="{DynamicResource ScrollBar.Static.CornerRadius}"
                                SnapsToDevicePixels="True" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
                <Setter Property="Width" Value="10" />
                <Setter Property="MinWidth" Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Border Background="{TemplateBinding Background}" CornerRadius="{DynamicResource ScrollBar.Static.CornerRadius}" />
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Row="0"
                                    Height="auto"
                                    IsDirectionReversed="true"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="Height" Value="10" />
                        <Setter Property="MinHeight" Value="10" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                        <Border Background="{TemplateBinding Background}" CornerRadius="{DynamicResource ScrollBar.Static.CornerRadius}" />
                                        <Track
                                            x:Name="PART_Track"
                                            Grid.Row="0"
                                            Height="auto"
                                            IsDirectionReversed="true"
                                            IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
